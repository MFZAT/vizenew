/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/models/guy.glb -o src/components/Guy.jsx -k -K -r public 
*/

import React, { useEffect } from "react";
import { useGraph } from "@react-three/fiber";
import {
  useGLTF,
  useAnimations,
  Outlines,
  MeshWobbleMaterial,
  MeshDistortMaterial,
} from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import * as THREE from "three";

export function Guy({ hoveredThis, sit, ...props }) {
  const group = React.useRef();
  const { scene, animations } = useGLTF("/models/guyanimated3.glb");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions, names } = useAnimations(animations, group);

  console.log(actions);

  useEffect(() => {
    if (sit) {
      actions[names[0]].fadeIn(0.5).play().reset();
    } else actions.waving.fadeIn(0.5).play().reset();
  }, [hoveredThis]);

  const bodyMaterial = new THREE.MeshToonMaterial();
  bodyMaterial.color.set(0x00ee44);
  bodyMaterial.opacity = 1;

  const handsMaterial = new THREE.MeshStandardMaterial();
  handsMaterial.color.set(0x000000);

  const headMaterial = new THREE.MeshStandardMaterial();
  headMaterial.color.set(0xffffff);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="2D-Rig-Eyes-008"
            geometry={nodes["2D-Rig-Eyes-008"].geometry}
            material={materials["2D-Rig-Eyes-008"]}
            skeleton={nodes["2D-Rig-Eyes-008"].skeleton}
          />
          <skinnedMesh
            name="2D-Rig-Mouth-008"
            geometry={nodes["2D-Rig-Mouth-008"].geometry}
            material={materials["2D-Rig-Mouth-008"]}
            skeleton={nodes["2D-Rig-Mouth-008"].skeleton}
            castShadow
          />
          <skinnedMesh
            name="arms"
            geometry={nodes.arms.geometry}
            material={handsMaterial}
            skeleton={nodes.arms.skeleton}
          />
          <skinnedMesh
            name="body"
            geometry={nodes.body.geometry}
            material={bodyMaterial}
            skeleton={nodes.body.skeleton}
            castShadow
          ></skinnedMesh>
          <skinnedMesh
            name="feet"
            geometry={nodes.feet.geometry}
            material={handsMaterial}
            skeleton={nodes.feet.skeleton}
            castShadow
          />
          <skinnedMesh
            name="head"
            geometry={nodes.head.geometry}
            material={headMaterial}
            skeleton={nodes.head.skeleton}
            castShadow
          >
            <Outlines thickness={1} color="black" />
          </skinnedMesh>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/guyanimated3.glb");
