/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/models/guyfaceanim.glb -o src/components/Tie.jsx -k -K -r public 
*/

import React, { useEffect } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

export function WithTie({ idle, sit, wave, look, ...props }) {
  const group = React.useRef();
  const { scene, animations } = useGLTF("/models/guyfaceanim.glb");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions, names } = useAnimations(animations, group);

  useEffect(() => {
    if (sit) {
      actions[names[4]].fadeIn(0.5).play().reset();
    }

    if (idle) {
      actions[names[0]].fadeIn(0.5).play().reset();
    }
    if (wave) {
      actions[names[7]].fadeIn(0.5).play().reset();
    }

    if (look) {
      actions[names[2]].fadeIn(0.5).play().reset();
    }
  }, [idle, sit, wave, look]);
  console.log(names);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Empty" rotation={[Math.PI / 2, 0, 0]} />
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="body001"
            geometry={nodes.body001.geometry}
            material={materials["Material.001"]}
            skeleton={nodes.body001.skeleton}
          />
          <skinnedMesh
            name="feet001"
            geometry={nodes.feet001.geometry}
            material={materials["Material.006"]}
            skeleton={nodes.feet001.skeleton}
          />
          <skinnedMesh
            name="hands"
            geometry={nodes.hands.geometry}
            material={materials["Material.010"]}
            skeleton={nodes.hands.skeleton}
          />
          <skinnedMesh
            name="head001"
            geometry={nodes.head001.geometry}
            material={materials["Material.005"]}
            skeleton={nodes.head001.skeleton}
          />
          <skinnedMesh
            name="path14"
            geometry={nodes.path14.geometry}
            material={materials["SVGMat.002"]}
            skeleton={nodes.path14.skeleton}
          />
          <skinnedMesh
            name="path15"
            geometry={nodes.path15.geometry}
            material={materials["SVGMat.003"]}
            skeleton={nodes.path15.skeleton}
          />
          <skinnedMesh
            name="path16"
            geometry={nodes.path16.geometry}
            material={materials["SVGMat.004"]}
            skeleton={nodes.path16.skeleton}
          />
          <skinnedMesh
            name="path17"
            geometry={nodes.path17.geometry}
            material={materials["SVGMat.005"]}
            skeleton={nodes.path17.skeleton}
          />
          <skinnedMesh
            name="path5"
            geometry={nodes.path5.geometry}
            material={materials.SVGMat}
            skeleton={nodes.path5.skeleton}
          />
          <skinnedMesh
            name="path6"
            geometry={nodes.path6.geometry}
            material={materials.SVGMat}
            skeleton={nodes.path6.skeleton}
          />
          <skinnedMesh
            name="path9"
            geometry={nodes.path9.geometry}
            material={materials.SVGMat}
            skeleton={nodes.path9.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/guyfaceanim.glb");
