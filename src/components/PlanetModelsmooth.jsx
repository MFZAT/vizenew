/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/models/planetmodelsmooth.glb -o src/components/PlanetModelsmooth.jsx -k -K -r public 
*/

import React from "react";
import {
  GradientTexture,
  Outlines,
  useGLTF,
  useTexture,
} from "@react-three/drei";
import * as THREE from "three";
import { degToRad } from "three/src/math/MathUtils.js";
import { OutlineEffect } from "three/examples/jsm/Addons.js";

export function ModelSmoothPlanet(props) {
  const { nodes, materials } = useGLTF("/models/planetmodelsmooth.glb");
  const material = new THREE.MeshToonMaterial();
  console.log(materials);
  materials["Brown leaves.001"].color.set("lime");
  materials["Brown leaves.001"].roughness = 0.5;
  materials["Brown leaves.001"].metalness = 0;
  materials["Brown leaves.001"].map.repeat.set(2, 2);
  materials["Brown leaves.001"].map.rotation = degToRad(90);

  material.color.set("#007934");
  material.blendColor = "multiply";
  material.map = useTexture("/textures/leavesbgr.png");
  material.map.wrapS = THREE.MirroredRepeatWrapping;
  material.map.wrapT = THREE.MirroredRepeatWrapping;
  material.map.repeat.set(3, 3);
  material.map.center.set(1, 2);
  material.map.rotation = degToRad(45);
  material.shininess = 50;
  material.roughness = 0;
  material.color.metalness = 1;

  console.log("material", material);
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="top"
          geometry={nodes.top.geometry}
          material={materials["Brown leaves.001"]}
        ></mesh>
        <mesh
          name="bottom"
          geometry={nodes.bottom.geometry}
          material={materials["Brown leaves.001"]}
          position={[-0.013, 0.032, 0]}
          rotation={[0, 0, Math.PI]}
          receiveShadow
        ></mesh>
        <mesh
          name="bottom001"
          geometry={nodes.bottom001.geometry}
          position={[-0.013, 0.032, 0]}
          rotation={[0, 0, Math.PI]}
          material={materials["Brown leaves.001"]}
          receiveShadow
        >
          {" "}
          <meshToonMaterial>
            <GradientTexture
              stops={[0, 0.7, 1]} // As many stops as you want
              colors={["#007934", "#3f9c35", "#bed600"]} // Colors need to match the number of stops
              size={1024} // Size is optional, default = 1024
            />
          </meshToonMaterial>
        </mesh>
        <mesh
          name="top001"
          geometry={nodes.top001.geometry}
          material={materials["Brown leaves.001"]}
          receiveShadow
        >
          <meshToonMaterial>
            <GradientTexture
              stops={[0, 0.7, 1]} // As many stops as you want
              colors={["#bed600", "#3f9c35", "#007934"]} // Colors need to match the number of stops
              size={1024} // Size is optional, default = 1024
            />
          </meshToonMaterial>
        </mesh>
        <mesh
          name="middle002"
          geometry={nodes.middle002.geometry}
          material={materials["Brown leaves.001"]}
          receiveShadow
        ></mesh>
        <mesh
          name="middle"
          geometry={nodes.middle.geometry}
          material={materials["Brown leaves.001"]}
          receiveShadow
        ></mesh>
        <mesh
          name="middle001"
          geometry={nodes.middle001.geometry}
          material={materials["Brown leaves.001"]}
        ></mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/models/planetmodelsmooth.glb");
